Preguntas orientadoras

1. Describa brevemente los diferentes perfiles de familias de microprocesadores/microcontroladores de
ARM. Explique algunas de sus diferencias.

R.  Hay tres perfiles de microprocesadores/microcontroladores A,R Y M.
Los cortex A son microprocesadores de aplicacion, ejecutan un sistemas operativos y estan diseñados no para realizar una sola tarea sino varias.
Los cortex R son microprocesadores que estan orientados a aplicaciones de tiempo real, donde el sistema nos garantiza un tiempo de respuesta
determinista siempre sera el mismo por ejemplo 1 ms, se utilizan para aplicaciones criticas.  
Los cortex M son microcontroladores de uso masivo estan diseñados para sistemas de bajo consumo y bajo costo.


Cortex M

1.Describa brevemente las diferencias entre las familias de procesadores Cortex MO, M3 Y M4.

R. Los cortex M0 son bastante simple tiene un sed de instrucciones reducido, son muy buenos para aplicaciones simples y de bajo consumo y costo.
Los cortex M3/M4/M7 son microcontroladores con mayor performance, agregan otras funcionalidades como procesamiento digital de señales, unidades 
de proteccion de memoria, etc. Tambien tienen funcionalidades que nos permiten cargan un sistema operativo en el microcontrolador. 

2.¿Por qué se dice que el set de instrucciones Thumb permite mayor densidad de código? Explique

R. Por que el set de instrucciones Thumb son instrucciones de 16 bits, esto nos permite cargar  dos instrucciones en un palabra de 32 bits mejorando 
la densidad de codigo. 

3.¿Qué entiende por arquitectura load-store? ¿Qué tipo de instrucciones no posee este tipo de arquitectura?

R. Las instrucciones no trabajan directamente sobre la memoria, lo que se hace es primero cargar el dato a un registro usando algunas 
instrucciones(ldr) y se opera sobre el mismo, luego se lo vuelve a cargar a la memori con otras instrucciones(str).

4. ¿Cómo es el mapa de memoria de la familia?

R. El mapa de memoria es plano de 4 GB de espacio, en todo este espacio tenemos las particiones de la memoria que corresponden a los perifericos, 
memorias externas, SRAM, etc.

5. ¿Qué ventajas presenta el uso de los “shadowed pointers” del PSP y el MSP?

R. Es un bit en el registro del stack pointer que nos permite elegir si se esta utilizando el MSP o el PSP esto se utiliza mucho 
cuando se implementa un sistema operativo por que permite utilizar el MSP para el sistema y el PSP para las tareas.

6. Describa los diferentes modos de privilegio y operación del Cortex M, sus relaciones y como se conmuta de uno al otro. 
Describa un ejemplo en el que se pasa del modo privilegiado a no priviligiado y nuevamente a privilegiado.

R. Existen 2 modos cuando se programa en bare metal que son modo privilegiado este modo es donde arranca el microcontrolador tiene la facultad de modificar
todos los registros del sistema y el modo handler que es el modo que se pone el micro cuando se activa un interrupcion tambien tiene privilegios de modificar
todos lo registros.

Cuando usamos un sistema operativo de tiempo real como puede ser un FreeRTOS existen 3 modos modo privilegiado, handler y modo no privilegiado los dos 
primeros modos son igual que el anterior pero el modo no privilegiado lo utilizan las tareas de sistema operativo las cuales no puede modificar todos los 
registros del sistema. Por ejemplos el sistema inicia siempre en modo privilegiado luego el sistema operativo llama al scheduler en modo handler este pone
 al sistema  en modo no privilegiado procesando una tarea  de la cual no se puede volver al modo privilegiado sino es atraves de un interrupción.

7. ¿Qué se entiende por modelo de registros ortogonal? Dé un ejemplo

R. Depende de la arquitectura del microprocesador, cuando todos los registros son de uso general y todos los registros pueden operar con todas las 
instrucciones se dice que es un modelo ortogonal. 


8. ¿Qué ventajas presenta el uso de instrucciones de ejecución condicional (IT)? Dé un ejemplo 

R. La ventaja es el performans. Con un arquitectura implementada con pipeline lo que se quiere lograr es que las instrucciones fluyan y que el puntero de programa siempre avance, la ejecucion 
condicional es una manera de asignar un valor u otro a la misma variable sin tener que hacer un salto. Ej. MOVEQ r2,r3

9. Describa brevemente las excepciones más prioritarias (reset, NMI, Hardfault).

R. Reset es lo primero que corre el microcontrolador al inicializar, HMI es la excepcion que no se puede ignorar o no es enmascarable por que es la excepcion del whachdog y la excepcion  HardFault son lo errores de 
hardware o lo de acceso a memoria.

10. Describa las funciones principales de la pila. ¿Cómo resuelve la arquitectura el llamado a funciones y su retorno?

R. La pila es un area de memoria de la sram, su funcion principal es poder salvaguardar el estado de los registros del cpu del contexto que se esta ejecutando antes 
de saltar a una funcion y cambiar de contexto, todo esto se hace para no destruir el contexto de donde se salta para que al volver no se rompa el sistema.

Lo que hace el microcontrolador cuando se llama a una funcion es utilizar sus registros de propositor general para pasar los parametros a la funcion 
utilizando los registros r0-r3 tambien guarda la dirreccion de retorno en el registro ldr para poder volver de la funcion de donde se salto.  

11. Describa la secuencia de reset del microprocesador.

R. Lo primero que el microcontrolador al prenderse es setear el SP a la direccion 0 , luego en la posicion siguiente se coloca el handler de reset es el que configura todos los perifericos y 
las memorias para que el programa pueda utilizarlos.


12. ¿Qué entiende por “core peripherals”? ¿Qué diferencia existe entre estos y el resto de los periféricos?

R.Los core peripherals son los perifericos del core de ARM (NVIC,Systick,etc),estos son pertenecientes a la IP de ARM Ylos demas perifericos ya son los que adicisionan los fabricantes a su diseño
de su micrcontrolador por ejemplo UART,SPI,I2C,etc.

13. ¿Cómo se implementan las prioridades de las interrupciones? Dé un ejemplo

R. Para setear las prioridades de las instrucciones existen tiene 3 o 4 bits dependiendo del micro. Las prioridades se asignan de menor a mayor, 
poniendo el menor valor a la mas prioritaria. Cuando hay dos interrupciones de la misma prioridad ninguna pisa a la otra sino que se encola para que se ejecutada posteriormente. 
